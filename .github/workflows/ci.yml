name: Django CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0  # Specify MySQL version
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install MySQL Development Libraries
      run: sudo apt-get install -y default-libmysqlclient-dev build-essential

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10' # Adjust to your Python version

    - name: Install Dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for MySQL to be Ready
      run: |
        for i in {1..15}; do
          mysql -h 127.0.0.1 -u root -proot -e "SELECT 1;" && break
          echo "Waiting for MySQL..."
          sleep 5
        done

    - name: Grant Permissions to MySQL User
      run: |
        mysql -h 127.0.0.1 -u root -proot -e "GRANT ALL PRIVILEGES ON *.* TO 'testuser'@'%' IDENTIFIED BY 'testpass'; FLUSH PRIVILEGES;"

    - name: Update Django Database Settings for CI
      run: |
        python -c "
import os
settings_file = 'e2e/settings.py'  # Adjust this if settings.py is in another location
if not os.path.exists(settings_file):
    raise FileNotFoundError(f'{settings_file} not found!')
with open(settings_file, 'r') as f:
    content = f.read()
content = content.replace(
    'DATABASES = {',
    'DATABASES = {\"default\": {\"ENGINE\": \"django.db.backends.mysql\", \"NAME\": \"testdb\", \"USER\": \"testuser\", \"PASSWORD\": \"testpass\", \"HOST\": \"127.0.0.1\", \"PORT\": \"3306\",}}'
)
with open(settings_file, 'w') as f:
    f.write(content)
        "

    - name: Run Migrations
      working-directory: e2e  # Adjust if manage.py is in a different location
      run: |
        source ../venv/bin/activate
        python manage.py migrate

    - name: Run Tests
      working-directory: e2e  # Adjust if manage.py is in a different location
      run: |
        source ../venv/bin/activate
        python manage.py test
